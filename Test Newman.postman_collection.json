{
	"info": {
		"_postman_id": "463f12bd-b9b8-4597-b55c-e31a4fc415a1",
		"name": "Test South",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18009872",
		"_collection_link": "https://interstellar-trinity-895934.postman.co/workspace/Aviv~e6d91582-2e3f-4e0d-ada8-22acd87465dc/collection/18009872-463f12bd-b9b8-4597-b55c-e31a4fc415a1?action=share&source=collection_link&creator=18009872"
	},
	"item": [
		{
			"name": "Testar status 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"leader\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Testar URL inválida - Retornando 201 - o correto seria 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"leader\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/asd",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"asd"
					]
				}
			},
			"response": []
		},
		{
			"name": "Testar campos obrigatórios - Todos os campos  são opcionais",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"id e createdAt \", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property(\"id\");\r",
							"    pm.expect(pm.response.json()).to.have.property(\"createdAt\");\r",
							"    pm.expect(pm.response.json().createdAt).to.match(/\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z/);\r",
							"    pm.expect(pm.response.json().id).to.be.a('string').and.to.match(/\\d+$/);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Testar inserção de campos novos - API deixa salvar e inclui o  campo no body de retorno",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"id e createdAt \", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property(\"id\");\r",
							"    pm.expect(pm.response.json()).to.have.property(\"createdAt\");\r",
							"    pm.expect(pm.response.json()).to.have.property(\"cortina\");\r",
							"    pm.expect(pm.response.json()).to.have.property(\"name\");\r",
							"    pm.expect(pm.response.json()).to.have.property(\"job\");\r",
							"    pm.expect(pm.response.json().createdAt).to.match(/\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z/);\r",
							"    pm.expect(pm.response.json().id).to.be.a('string').and.to.match(/\\d+$/);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": 256,\r\n    \"job\": \"256\",\r\n    \"cortina\": 256\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Testar quebra de contrato - sem json informado",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"id e createdAt \", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property(\"id\");\r",
							"    pm.expect(pm.response.json()).to.have.property(\"createdAt\");\r",
							"    pm.expect(pm.response.json().createdAt).to.match(/\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z/);\r",
							"    pm.expect(pm.response.json().id).to.be.a('string').and.to.match(/\\d+$/);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		}
	]
}